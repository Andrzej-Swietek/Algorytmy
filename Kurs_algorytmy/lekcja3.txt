23.01.2021 12:00

Bartek Łukasiewicz [obecny]

Mateusz Filipowicz
Paulina Nguyen [ok]
Andrzej Wróblewski[OK]
Adam Pawlak[OK]
Krzysztof Ligarski [OK]
Dominik Szczepaniak [jestem]
Wiktor Stojek
Krzysztof Mazurkiewicz[ok]
Andrzej Swiętek [ok]
Piotr Bonar[ok]
Damian Żabicki[ok]
Jerzy Puchalski[ok]
Grzegorz Iwaszkiewicz[ok]



Zadanie:
https://atcoder.jp/contests/abc105/tasks/abc105_d

N M
3 2
4 1 5 <= 10^9
*
  ***
*****

Wynikiem jest: 3.

Ile jest podsłów (spójny podciąg), których suma jest podzielna przez M?


  5  2
  4  3  5  5  4
  p----

0 4  7 12 17 21
  *     *

wynik += 2

#include <bits/stdc++.h>
using namespace std;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	long long n, m;
	cin>>n>>m;
	long long tab[n], pref[n+1];
	for (long long i=0;i<n;i++) cin>>tab[i];
	long long wynik=0;
	for (long long i=0;i<n;i++){ // O(N)
		for (long long j=0;j<=n;j++){ // O(N)
			pref[j]=0;
		}
		for (long long j=i+1;j<=n;j++){
			pref[j]=pref[j-1]+tab[j-1];
		}
		for (long long j=i;j<n;j++){
			if (pref[j+1]%m==0) wynik++;
		}
	}
	cout<<wynik;
}

Złożoność czasowa: O(N^2).



  8  3
  4  1  3  6  4  3  2  5
0 1  2  2  2  0  0  2  1 <- S
0+0 +0 +1 +2 +1 +2 +3 +1

        l***********p
     -              +

(S[p] - S[l - 1]) % M = 0
S[p] % M = S[l - 1] % M




0 1 2 3 4 5 6 <- indeksy, klucze
      ?       <- wartosci


"marek" -> 180
"wojtek" -> 172
"zosia" -> 169

#include<map>
map<string, int> wysokosci;
wysokosci["marek"] = 180;
wysokosci["wojtek"] = 172;
wysokosci["zosia"] = 169;
wysokosci["marek"] = 181;

cout << wysokosci["zosia"];

Operacja w O(log(rozmiar))


Rozwiązanie:
#include <iostream>
#include <map>
using namespace std;

map<int, int> ile;

int main () {
    int n, m;
    cin >> n >> m;

    ile[0] = 1;
    int suma = 0;
    long long wynik = 0;

    for(int i = 1; i <= n; i++) {
        int a;
        cin >> a;
        suma = (suma + a) % m;
        wynik += ile[suma];
        ile[suma]++;
    }

    cout << wynik;

    return 0;
}




Ciąg Fibonacciego

Ciąg rekurencyjny

F(0) = 0
F(1) = 1
F(2) = 1
F(3) = 2
F(4) = 3
...
F(n) = F(n-1) + F(n-2)


0 1 1 2 3 5 8 13 21 34 55 89
0 1 2 3 4 5 6  7  8  9 10 11

n <= 70
int fib(int n) {

}




Paulina Nguyen


Andrzej Wróblewski
#include <iostream>

using namespace std;

int fib(int a){
    long long tab[a + 1];
    tab[0] = 0;
    tab[1] = 1;
    for(int i = 2;i <= a;i++){ //O(a)
        tab[i] = tab[i - 1] + tab[i - 2];
    }
    return tab[a];
}

int main()
{
    int a;
    cin >> a;
    cout << fib(a);
}
//O(a)

Adam Pawlak



Krzysztof Ligarski
int fib(int n)
{
    return n == 0 || n == 1 ? n : fib(n - 1) + fib(n - 2);
}
// O(log(n))?

Dominik Szczepaniak

vector<ll> dp(71, 0);
int fib(int n){
	dp[0] = 0;
	dp[1] = 1;
	if(dp[n] == 0){
		for(int i = 2; i<=70; i++){
			dp[i] = dp[i-1] + dp[i-2];
		}
		return dp[n];
	}
	else{
		return dp[n];
	}
}
//O(n)

Krzysztof Mazurkiewicz


#include <bits/stdc++.h>
using namespace std;
int main()
{
    long long t[70];
    t[0]=0;
    t[1]=1;
    int n;
    cin>>n;
    for (int i=2; i<=n; i++)
    {
        t[i]=t[i-1]+t[i-2];
    }
    cout<<t[n];
}



Andrzej Świętek
int fib( int n ){
    if ( i == 0 || n == 1 ) return n
    else return fib( n-1 ) + fib( n-2 )
}
// 0(n) ??

Piotr Bonar
#include <iostream>

using namespace std;

int fib (int n) {
    int tab[n];
    tab[0] = 0;
    tab[1] = 1;
    for (int i = 2; i <= n; i++)
        tab[i] = tab[i-1] + tab[i-2];
    return tab[n];
}

int main()
{
    int n;
    cin >> n;
    cout << fib(n);
}


Damian Żabicki
fib[0]=0;
fib[1]=1;
for (int i=2;i<=n;i++)  fib[i]=fib[i-1]+fib[i-2];
wynik=fib[n]; //O(n)


Jerzy Puchalski



Grzegorz Iwaszkiewicz




poprzednia = 0
aktualna = 1

nastepna = 1

0  1  1  2  3  5  8
a  b
   a  b

nowy = a + b
a = b
b = nowy



Zadanie 1:
https://codeforces.com/problemset/problem/199/A

Wejście:
21


Wyjście:
13 8 0


a 0 0

dwie poprzednie + 0

F(i-4) F(i-3) F(i-2) F(i-1) F(i)
   *     *              *


Zadanie 2:
https://codeforces.com/problemset/problem/365/B

n <= 100,000
0 <= A_i <= 10^9


4 5 2 1 0 1 1 2 3 5 2 7 9 11
    9 7 3 1 1 2 3 5 8 7 9 16
- - - - - 1 1 1 1 1 - 1 1  0

2 2 4 6 10
**********

Jaka jest długość najdłuższego takiego ciągu?


Zadanie 3:
Znajdź k-tą literę nieskończonego (F2021, wystarczy F95) słowa Fibonacciego.

Wejście:
17

Wyjście:
a


F1 = "b" / 1
F2 = "a" / 1
F3 = "ab" / 2
F4 = "aba" / 3
F5 = "abaab" / 5
F6 = "abaababa" / 8
F7 = "abaababaabaab" / 13
...
F(2021) = "abaababaabaab...."
           1234567890

F(i) = F(i-1)F(i-2)


Jaka jest ('a' czy 'b') n-ta litera F(2021)?
n <= 10^18

n = 10? -> 'b'



F8 =   F7          F6
  abaababaabaab,abaababa

N = 4
    F5   F4
  abaab,aba

N = 4
 F4  F3
aba,ab

N = 1

F2 F1
a,b


N = 17?

N = 17 w F8
N = 4 w F6
N = 4 w F5
N = 1 w F3
N = 1 w F2 -> 'a'

Zadanie Zajączek:

0 1 1 1 0 0 1 0 1 1 1 1 0
start                   meta

start -> meta w minimalnej liczbie ruchów, możemy stawać tylko na 0.
Skoki, które możemy wykonywać mają być liczbami Fibonacciego.

Wejście:
12 <= 300,000
0 1 1 1 0 0 1 0 1 1 1 1 0
*         *   *          *
 + 5 + 2 + 5

Wyjście:
3


1, 2, 3, 5, 8, ...
0   1   1   1   0   0   1   0   1   1   1   1   0
0   -   -   -   -   1   -   2   -   -   -   -   3



Praca domowa:
1) Implementacja https://codeforces.com/problemset/problem/199/A
2) Implementacja https://codeforces.com/problemset/problem/365/B
3) Implementacja zadanie 3.
4) Implementacja zadania "Zajączek"
5) Zapoznać się z zadaniami "Drabina" oraz "Spotkanie".
